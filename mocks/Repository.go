// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	products "github.com/wisdommatt/ecommerce-microservice-product-service/internal/products"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// GetProductBySKU provides a mock function with given fields: ctx, sku
func (_m *Repository) GetProductBySKU(ctx context.Context, sku string) (*products.Product, error) {
	ret := _m.Called(ctx, sku)

	var r0 *products.Product
	if rf, ok := ret.Get(0).(func(context.Context, string) *products.Product); ok {
		r0 = rf(ctx, sku)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*products.Product)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, sku)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveProduct provides a mock function with given fields: ctx, product
func (_m *Repository) SaveProduct(ctx context.Context, product *products.Product) error {
	ret := _m.Called(ctx, product)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *products.Product) error); ok {
		r0 = rf(ctx, product)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
